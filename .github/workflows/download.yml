name: Download

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  wait:
    runs-on: ubuntu-latest
    steps:
      - name: Wait
        run: sleep 60
  download-latest:
    runs-on: ubuntu-latest
    needs: wait
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download
        uses: ./
        id: download-latest
        with:
          workflow: upload.yml
          name: artifact
          path: artifact
          search_artifacts: true
      
      - name: post-download-step-if-failed
        if: ${{ steps.download-latest.outputs.state == 'failed' }}
        env:
          FAILURE_MESSAGE: ${{ steps.download-latest.outputs.message }}
        run: |
          echo "Post download step. Runs if there is an error"
          echo "Message = " $FAILURE_MESSAGE

      - name: step-for API rate limit exceeded for installation ID error
        if: contains(steps.download-latest.outputs.message, 'API rate limit exceeded for installation ID')
        run: |
          echo "The failure was specifically due to exeeding API rate limits"


      - name: post-download-step-if-not-failed
        if: ${{ steps.download-latest.outputs.state != 'failed' }}
        run: |
          echo "Post download step. Runs if there is NOT an error"

      - name: Test
        run: cat artifact/sha | grep $GITHUB_SHA
    
  download-branch:
    runs-on: ubuntu-latest
    needs: wait
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download
        uses: ./
        with:
          workflow: upload.yml
          name: artifact
          path: artifact
          branch: master
      - name: Test
        run: cat artifact/sha | grep $GITHUB_SHA
  download-pr:
    runs-on: ubuntu-latest
    needs: wait
    if: github.ref != 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download
        uses: ./
        with:
          workflow: upload.yml
          name: artifact
          path: artifact
          pr: ${{github.event.pull_request.number}}
      - name: Test
        run: cat artifact/sha | grep $GITHUB_SHA
  download-multiple:
    runs-on: ubuntu-latest
    needs: wait
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download
        uses: ./
        with:
          workflow: upload.yml
      - name: Test
        run: |
          cat artifact1/sha1 | grep $GITHUB_SHA
          cat artifact2/sha2 | grep $GITHUB_SHA
  download-conclusion:
    runs-on: ubuntu-latest
    needs: wait
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download
        uses: ./
        with:
          workflow: upload.yml
          name: artifact
          path: artifact
          workflow_conclusion: ''
      - name: Test
        run: cat artifact/sha | grep $GITHUB_SHA
